@model WebApplicationEShoppingCart.ViewModel.ItemViewModel
@{
    ViewBag.Title = "Index";
}
<style>
    #txtItemPrice{
        text-align: right;
    }
</style>


<h2>Index</h2>

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                Category:
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategorySelectListItem, "Value", "Text"),
               new {@class = "form-control"})
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                Item Code:
                @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control", autocomplete = "Off" })

            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                Item Name:
                @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control", autocomplete = "Off" })
            </div>
        </div>


        <div class="col-md-4">
            <div class="form-group">
                Description:
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", autocomplete = "Off" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                Item Price:
                @Html.TextBoxFor(model => model.ItemPrice, new { @class = "form-control", autocomplete = "Off" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                Image:
                @Html.TextBoxFor(model => model.ImagePath, new { type = "file", @class = "form-control" })
            </div>
        </div>

        <input type="button" value="Save" name="save" class="btn btn-primary" id="btnSave" />
        &nbsp;
        <input type="button" value="Reset" name="reset" class="btn btn-danger" />
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#btnSave").click(function () {
                SaveItem();
            });
        });

        function ResetItem() {
            $("#CategoryId").val("1");
            $("#ItemCode").val("");
            $("#ItemName").val("");
            $("#Description").val("");
            $("#ItemPrice").val("");
            $("#ImagePath").val("");
        }

        function SaveItem() {
            var formData = new FormData();
            formData.append("CategoryId", $("#CategoryId").val());
            formData.append("ItemCode", $("#ItemCode").val());
            formData.append("ItemName", $("#ItemName").val());
            formData.append("Description", $("#Description").val());
            formData.append("ItemPrice", $("#ItemPrice").val());
            formData.append("ImagePath", $("#ImagePath").get(0).files[0]);

            $.ajax({
                async: true,
                dataType: 'JSON',
                type: 'POST',
                contentType: false,
                processData: false,
                url: '/Item/Index',
                data: formData,
                success: function (data) {
                    if (data.Success)
                    {
                        alert(data.Message);
                        ResetItem();
                    }

                },

                error: function () {
                    alert('There is some errors to add item.');
                }
            });
        }
    </script>
}

